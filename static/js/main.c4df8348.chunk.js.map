{"version":3,"sources":["API/api.js","Store/store.js","Components/Pagination/Pagination.jsx","Components/User/User.jsx","Components/Table/Table.jsx","Components/FormForAddNewUser/Form.jsx","App.jsx","index.js"],"names":["BASE_URL","request","url","id","options","fetch","then","result","json","data","getUser","userId","editUser","SET_ALL_USER","SET_NUMBER_PAGE","ADD_USER","DELETE_USERS","EDIT_USER","IS_EDIT_CELL","addUser","user","type","deleteUsers","setAllUserInState","allUsers","isEditCell","bool","store","visibleUsers","numPage","page","allPages","fromUser","toUser","boolValCell","getUsersFromServer","a","arrUser","dispatch","setNumPage","addUserToState","deleteUserFromState","initialState","createStore","state","action","length","filter","map","name","email","phone","website","composeWithDevTools","applyMiddleware","thunk","Pagination","allPage","useSelector","countVisibleUsers","numberPage","fromUsers","toUsers","paginationPages","Math","ceil","paginationArr","active","last","arr","i","push","getPaginationControls","className","classNames","disabled","onClick","pagination","uuidv4","User","useDispatch","isEdCell","useState","editName","setEditName","customName","setCustomName","editEmail","setEditEmail","customEmail","setCustomEmail","editPhone","setEditPhone","customPhone","setCustomPhone","editWebsite","setEditWebsite","customWebsite","setCustomWebsite","verificationEditCell","setValue","handleEdit","e","target","value","handleSave","code","method","body","JSON","stringify","headers","onDoubleClick","onChange","onKeyDown","Table","arrUsers","useEffect","Form","htmlFor","required","placeholder","event","form","webSite","reset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4df8348.chunk.js","sourcesContent":["const BASE_URL = `https://mate-api.herokuapp.com`;\n\nconst request = (url,  id = '', options) => fetch(\n  `${BASE_URL}/${url}/${id}`, options,\n)\n  .then(result => result.json())\n  .then(result => result.data);\n\nexport const getUser = (userId = '') => request(`users${userId}`);\n\nexport const addUser = options => request('users', '', options);\n\nexport const editUser = (id, options) => request('users', id, options);\n\nexport const deleteUser = userId => request('users', userId, {\n  method: 'DELETE'\n});","import {createStore, applyMiddleware} from \"redux\";\nimport thunk from 'redux-thunk';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { getUser } from \"../API/api\";\n\n/* Actions */\nconst SET_ALL_USER = 'SET_ALL_USER';\nconst SET_NUMBER_PAGE = 'SET_NUMBER_PAGE';\nconst ADD_USER = 'ADD_USER';\nconst DELETE_USERS = 'DELETE_USERS';\nconst EDIT_USER = 'EDIT_USER';\nconst IS_EDIT_CELL = 'IS_EDIT_CELL';\n\n/* Action Creator */\nconst addUser = (user) => ({type: ADD_USER, user});\nconst deleteUsers = (id) => ({type: DELETE_USERS, id});\nexport const editUserAction = (user) => ({type: EDIT_USER, user});\nconst setAllUserInState = (allUsers) => ({type:SET_ALL_USER, allUsers});\nconst setNumberPage = (page) => ({type:SET_NUMBER_PAGE, page});\nexport const isEditCell = (bool) => ({type:IS_EDIT_CELL, bool});\n\n/* Selector in store */\nexport const allUsers = (store) => store.allUsers;\nexport const visibleUsers = (store) => store.visibleUsers;\nexport const numPage = (store) => store.page;\nexport const allPages = (store) => store.allPages;\nexport const fromUser = (store) => store.fromUser;\nexport const toUser = (store) => store.toUser;\nexport const boolValCell = (store) => store.isEditCell;\n\n/* Thunk */\nexport const getUsersFromServer = async (id) => {\n  await getUser(id)\n  .then(arrUser => store.dispatch(setAllUserInState(arrUser)));\n}\n\nexport const setNumPage = (numPage) => {\n  store.dispatch(setNumberPage(numPage));\n}\n\nexport const addUserToState = (user={}) => {\n  store.dispatch(addUser(user));\n}\n\nexport const deleteUserFromState = (id='') => {\n  store.dispatch(deleteUsers(id));\n}\n\nconst initialState = {\n  allUsers: [],\n  visibleUsers: 5,\n  page: 1,\n  fromUser: 1,\n  toUser: 5,\n  allPages: 1,\n  isEditCell: true,\n};\n\n/* Reducer */\nconst reducer = (state=initialState, action) => {\n  switch (action.type) {\n    case SET_ALL_USER:\n      return {...state, allUsers: action.allUsers, allPages: action.allUsers.length};\n\n    case SET_NUMBER_PAGE:\n      return {...state, page: action.page, fromUser: action.page * state.visibleUsers - state.visibleUsers + 1, toUser: action.page * state.visibleUsers > state.allUsers ? state.allUsers : action.page * state.visibleUsers};\n\n      case ADD_USER:\n      return {...state, allUsers: [...state.allUsers, action.user], allPages: state.allUsers.length};\n\n      case DELETE_USERS:\n      return {...state, allUsers: state.allUsers.filter(user => user.id !== action.id), allPages: state.allUsers.length};\n\n      case EDIT_USER:\n      return {...state, allUsers: state.allUsers.map(user => user.id === action.user.id ?\n        {\n          id: action.user.id,\n          name: action.user.name,\n          email: action.user.email,\n          phone: action.user.phone,\n          website: action.user.website,\n        }\n        : user)};\n\n      case IS_EDIT_CELL:\n      return {...state, isEditCell: action.bool};\n\n    default:\n      return state;\n  }\n}\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk))\n  );","import React from 'react';\n// import PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { useSelector } from \"react-redux\";\nimport { allPages , visibleUsers, numPage, setNumPage, fromUser, toUser } from '../../Store/store';\nimport { v4 as uuidv4 } from 'uuid';\nimport './styleForPagination.css';\n\nexport const Pagination = () => {\nconst allPage = useSelector(allPages);\nconst countVisibleUsers = useSelector(visibleUsers);\nconst numberPage = useSelector(numPage);\nconst fromUsers = useSelector(fromUser);\nconst toUsers = useSelector(toUser);\n\n\n  const paginationPages = Math.ceil(allPage / countVisibleUsers);\n  const paginationArr = getPaginationControls(numberPage, paginationPages);\n\n  function getPaginationControls(active, last) {\n    if (last > 5) {\n      if (active === 1) {\n        return [active, active + 1, active + 2, '...', last];\n      }\n\n      if (active > 1 && active < 3) {\n        return [active - 1, active, active + 1, '...', last];\n      }\n\n      if (active > 2 && active < 4) {\n        return [active - 2, active - 1, active, active + 1, '...', last];\n      }\n\n      if (active > 3 && active < last - 2) {\n        return [1, '...', active - 1, active, active + 1, '...', last];\n      }\n\n      if (active > last - 3 && active < last - 1) {\n        return [1, '...', active - 1, active, active + 1, active + 2];\n      }\n\n      if (active > last - 2 && active < last) {\n        return [1, '...', active - 1, active, active + 1];\n      }\n\n      if (active === last) {\n        return [1, '...', active - 2, active - 1, active];\n      }\n    }\n\n    const arr = [];\n\n    for (let i = 1; i <= last; i += 1) {\n      arr.push(i);\n    }\n\n    return arr;\n  }\n\n  return (\n    <>\n      <div className=\"active-items\">\n        {`Post ${fromUsers}-${toUsers} of ${allPage}`}\n      </div>\n      <nav>\n        <ul className=\"pagination justify-content-center\">\n          <li\n            className={classNames(\n              'page-item',\n              { disabled: numberPage === 1 },\n            )}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={() => setNumPage(numberPage - 1)}\n            >\n              Previous\n            </button>\n          </li>\n\n          {paginationArr.map(pagination => (\n            pagination !== '...'\n              ? (\n                <li\n                  key={uuidv4()}\n                  className={classNames(\n                    'page-item',\n                    { active: pagination === numberPage },\n                  )}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"page-link\"\n                    onClick={() => setNumPage(pagination)}\n                  >\n                    {pagination}\n                  </button>\n                </li>\n              )\n              : (\n                <li\n                  key={uuidv4()}\n                  className=\"page-item page-link ellipsis\"\n                >\n                  {pagination}\n                </li>\n              )\n          ))}\n\n          <li\n            className={classNames(\n              'page-item',\n              { disabled: numberPage === Math.ceil(allPage / countVisibleUsers) },\n            )}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={() => setNumPage(numberPage + 1)}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n\n// Pagination.propTypes = {\n//   visibleUsers: PropTypes.number.isRequired,\n//   page: PropTypes.number.isRequired,\n//   setNumPage: PropTypes.func.isRequired,\n// };\n","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { deleteUserFromState, isEditCell, boolValCell, editUserAction } from '../../Store/store';\nimport './style.css'\nimport { deleteUser, editUser } from '../../API/api';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const User = ({ name, email, phone, website, id }) => {\n  const dispatch = useDispatch();\n  const isEdCell = useSelector(boolValCell);\n\n  const [editName, setEditName] = useState(false);\n  const [customName, setCustomName] = useState(name);\n\n  const [editEmail, setEditEmail] = useState(false);\n  const [customEmail, setCustomEmail] = useState(email);\n\n  const [editPhone, setEditPhone] = useState(false);\n  const [customPhone, setCustomPhone] = useState(phone);\n\n  const [editWebsite, setEditWebsite] = useState(false);\n  const [customWebsite, setCustomWebsite] = useState(website);\n\n  const verificationEditCell = (setValue) => {\n    if (isEdCell) {\n      dispatch(isEditCell(false));\n      setValue(true);\n    }\n  }\n\n  const handleEdit = (e, setValue) => {\n    setValue(e.target.value);\n  }\n\n  const handleSave = async (e, id, setValue, value) => {\n    if (e.code === \"Enter\") {\n      if (!customName || !editEmail || !editPhone || !editWebsite) {\n        setValue(value);\n      }\n\n      editUser(id, {\n        method: 'PATCH',\n        body: JSON.stringify({\n        name: customName,\n        email: customEmail,\n        phone: customPhone,\n        website: customWebsite,\n        }),\n        headers: { 'Content-type': 'application/json; charset=utf-8' },\n      })\n\n      dispatch(editUserAction(\n        {\n          id: id,\n          name: customName,\n          email: customEmail,\n          phone: customPhone,\n          website: customWebsite,\n          }\n      ))\n\n      setEditName(false);\n      dispatch(isEditCell(true));\n    }\n\n    if (e.code === \"Escape\") {\n      setValue(value);\n      setEditName(false);\n    }\n  }\n\n  return (\n    <tr>\n      <td onDoubleClick={() => { verificationEditCell(setEditName) }}>{editName && !isEdCell ? <input value={customName} onChange={(e) => handleEdit(e, setCustomName)} onKeyDown={(e) => handleSave(e, id, setCustomName, customName)} /> : customName}</td>\n      <td onDoubleClick={() => { verificationEditCell(setEditEmail) }}>{editEmail && !isEdCell ? <input value={customEmail} onChange={(e) => handleEdit(e, setCustomEmail)} onKeyDown={(e) => handleSave(e, id, setCustomEmail, customEmail)} /> : customEmail}</td>\n      <td onDoubleClick={() => { verificationEditCell(setEditPhone) }}>{editPhone && !isEdCell ? <input value={customPhone} onChange={(e) => handleEdit(e, setCustomPhone)} onKeyDown={(e) => handleSave(e, id, setCustomPhone, customPhone)} /> : customPhone}</td>\n      <td onDoubleClick={() => { verificationEditCell(setEditWebsite) }}>{editWebsite && !isEdCell ? <input value={customWebsite} onChange={(e) => handleEdit(e, setCustomWebsite)} onKeyDown={(e) => handleSave(e, id, setCustomWebsite, customWebsite)} /> : customWebsite}</td>\n      <td> <button onClick={async () => {\n        await deleteUser(id);\n        deleteUserFromState(id);\n      }}>Delete</button></td>\n    </tr>\n  )\n};\n\nUser.propTypes = {\n  id: PropTypes.any,\n  name: PropTypes.any,\n  email: PropTypes.any,\n  phone: PropTypes.any,\n  website: PropTypes.any,\n}\n\n","import React, { useEffect } from 'react';\nimport { getUsersFromServer, allUsers, fromUser, toUser } from '../../Store/store';\nimport { useSelector } from \"react-redux\";\nimport './style.css'\nimport {User} from '../User/User'\n\nexport const Table = () => {\n  const arrUsers = useSelector(allUsers)\n  const fromUsers = useSelector(fromUser);\n  const toUsers = useSelector(toUser);\n\n  useEffect(() => {\n    getUsersFromServer();\n  }, [arrUsers.length]);\n\n    return (\n      <>\n        <table>\n          <thead>\n            <tr>\n              <th>Full name</th>\n              <th>Email</th>\n              <th>Phone</th>\n              <th>Website</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n\n          <tbody>\n            {arrUsers ? arrUsers.map((user, i) => i >= fromUsers - 1 && i < toUsers ? (\n              <User key={user.id} {...user} />\n            ) : null) : null}\n          </tbody>\n\n        </table>\n      </>\n\n    )\n  };","import React from 'react';\nimport { addUser } from '../../API/api';\nimport { addUserToState } from '../../Store/store';\nimport './styleForForm.css';\n\nexport const Form = () =>  (\n    <div className=\"container\">\n      <form className=\"new-employee-form\" name=\"addUser\" method=\"get\">\n        <label className=\"labelForm\" htmlFor=\"name\">Full name:*\n        <input className=\"inputForm\" type=\"text\" name=\"name\" id='name' required placeholder=\"Irina Sokolova\"/>\n        </label>\n        <label className=\"labelForm\" htmlFor=\"email\">Email:*\n        <input className=\"inputForm\" type=\"email\" name=\"email\" id=\"email\" required placeholder=\"ivanov@gmail.com\"/>\n        </label>\n        <label className=\"labelForm\" htmlFor=\"phone\">Phone:*\n        <input className=\"inputForm\" type=\"tel\" name=\"phone\" id=\"phone\" required placeholder=\"+38(097)532-23-11\"/>\n        </label>\n        <label className=\"labelForm\" htmlFor=\"webSite\">Web site:*\n        <input className=\"inputForm\" type=\"url\" name=\"webSite\" id=\"webSite\" required  placeholder=\"https://mysite.com\"/>\n        </label>\n        <button type=\"submit\" className=\"formButton\" onClick={async(event) => {\n          let form = event.target.form;\n          await addUser({\n            method: 'POST',\n            body: JSON.stringify({\n              name: form.name.value,\n              email: form.email.value,\n              phone: form.phone.value,\n              website: form.webSite.value,\n            }),\n            headers: { 'Content-type': 'application/json; charset=utf-8' },\n          })\n\n          addUserToState({\n            name: form.name.value,\n            email: form.email.value,\n            phone: form.phone.value,\n            website: form.webSite.value,\n          });\n\n          form.reset();\n        }}>Add new user</button>\n      </form>\n    </div>\n  );","import React from 'react';\nimport './App.css';\nimport { Pagination } from './Components/Pagination/Pagination';\nimport { Table } from './Components/Table/Table';\nimport { Form } from './Components/FormForAddNewUser/Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"container2\">\n      <Table />\n      <Form />\n      </div>\n      <Pagination />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './Store/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n    <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}