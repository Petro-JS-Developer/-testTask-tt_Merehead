{"version":3,"sources":["API/api.js","Store/store.js","Components/Pagination/Pagination.jsx","Components/User/User.jsx","Components/Table/Table.jsx","Components/FormForAddNewUser/Form.jsx","App.jsx","index.js"],"names":["BASE_URL","request","url","id","options","fetch","then","result","json","data","getUser","userId","SET_ALL_USER","SET_NUMBER_PAGE","ADD_USER","DELETE_USERS","EDIT_USER","IS_EDIT_CELL","addUser","user","type","setAllUserInState","allUsers","isEditCellActionCreator","bool","initialState","visibleUsers","page","fromUser","toUser","isEditCell","store","numPage","boolValCell","createStore","state","action","filter","map","name","email","phone","website","composeWithDevTools","applyMiddleware","thunk","getUsersFromServer","a","arrUser","dispatch","setNumPage","numPages","addUserToState","deleteUserFromState","deleteUsers","Pagination","allPage","useSelector","length","countVisibleUsers","numberPage","fromUsers","toUsers","paginationPages","Math","ceil","paginationArr","active","last","arr","i","push","getPaginationControls","className","classNames","disabled","onClick","pagination","uuidv4","User","useDispatch","useState","editName","setEditName","customName","setCustomName","editEmail","setEditEmail","customEmail","setCustomEmail","editPhone","setEditPhone","customPhone","setCustomPhone","editWebsite","setEditWebsite","customWebsite","setCustomWebsite","verificationEditCell","setValue","useEffect","handleEdit","e","target","value","handleSave","idUser","currentValue","baseValue","code","method","body","JSON","stringify","headers","editUser","editUserAction","onDoubleClick","autoFocus","onChange","onKeyDown","Table","arrUsers","Form","htmlFor","required","placeholder","event","form","webSite","reset","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d7e0b980.chunk.js","sourcesContent":["const BASE_URL = 'https://mate-api.herokuapp.com';\n\nconst request = (url, id = '', options) => fetch(\n  `${BASE_URL}/${url}/${id}`, options,\n)\n  .then((result) => result.json())\n  .then((result) => result.data);\n\nexport const getUser = (userId = '') => request(`users${userId}`);\n\nexport const addUser = (\n  name,\n  email,\n  phone,\n  website,\n) => request(\n  'users',\n  '',\n  {\n    method: 'POST',\n    body: JSON.stringify({\n      name,\n      email,\n      phone,\n      website,\n    }),\n    headers: { 'Content-type': 'application/json; charset=utf-8' },\n  },\n);\n\nexport const editUser = (id, name, email, phone, website) => request(\n  'users',\n  id,\n  {\n    method: 'PATCH',\n    body: JSON.stringify({\n      name,\n      email,\n      phone,\n      website,\n    }),\n    headers: { 'Content-type': 'application/json; charset=utf-8' },\n  },\n);\n\nexport const deleteUser = (userId) => request('users', userId, {\n  method: 'DELETE',\n});\n\n// export const deleteUser = (userId) => fetch(`${BASE_URL}/users/${userId}`, {\n//   method: 'DELETE',\n// })\n//   .then((result) => (result.json()));\n","import {\n  createStore,\n  applyMiddleware,\n} from 'redux';\nimport thunk from 'redux-thunk';\nimport {\n  composeWithDevTools,\n} from 'redux-devtools-extension';\nimport {\n  getUser,\n} from '../API/api';\n\n/* Actions */\nconst SET_ALL_USER = 'SET_ALL_USER';\nconst SET_NUMBER_PAGE = 'SET_NUMBER_PAGE';\nconst ADD_USER = 'ADD_USER';\nconst DELETE_USERS = 'DELETE_USERS';\nconst EDIT_USER = 'EDIT_USER';\nconst IS_EDIT_CELL = 'IS_EDIT_CELL';\n\n/* Action Creator */\nconst addUser = (user) => ({\n  type: ADD_USER,\n  user,\n});\nconst deleteUsers = (id) => ({\n  type: DELETE_USERS,\n  id,\n});\nexport const editUserAction = (\n  id,\n  name,\n  email,\n  phone,\n  website,\n) => ({\n  type: EDIT_USER,\n  user: {\n    id,\n    name,\n    email,\n    phone,\n    website,\n  },\n});\nconst setAllUserInState = (allUsers) => ({\n  type: SET_ALL_USER,\n  allUsers,\n});\nconst setNumberPage = (page) => ({\n  type: SET_NUMBER_PAGE,\n  page,\n});\nexport const isEditCellActionCreator = (bool) => ({\n  type: IS_EDIT_CELL,\n  bool,\n});\n\nconst initialState = {\n  allUsers: [],\n  visibleUsers: 5,\n  page: 1,\n  fromUser: 1,\n  toUser: 5,\n  isEditCell: null,\n};\n\n/* Reducer */\nconst reducer = (state = initialState, action) => {\n  switch (action.type) {\n    case SET_ALL_USER:\n      return {\n        ...state, allUsers: action.allUsers,\n      };\n\n    case SET_NUMBER_PAGE:\n      return {\n        ...state,\n        page: action.page,\n        fromUser: action.page * state.visibleUsers - state.visibleUsers + 1,\n        toUser: action.page * state.visibleUsers > state.allUsers\n          ? state.allUsers : action.page * state.visibleUsers,\n      };\n\n    case ADD_USER:\n      return {\n        ...state, allUsers: [...state.allUsers, action.user],\n      };\n\n    case DELETE_USERS:\n      return {\n        ...state,\n        allUsers: state.allUsers\n          .filter((user) => user.id !== action.id),\n      };\n\n    case EDIT_USER:\n      return {\n        ...state,\n        allUsers: state.allUsers.map((user) => (user.id === action.user.id ? {\n          id: action.user.id,\n          name: action.user.name,\n          email: action.user.email,\n          phone: action.user.phone,\n          website: action.user.website,\n        }\n          : user)),\n      };\n\n    case IS_EDIT_CELL:\n      return {\n        ...state, isEditCell: action.bool,\n      };\n\n    default:\n      return state;\n  }\n};\n\n/* Selector in store */\nexport const allUsers = (store) => store.allUsers;\nexport const visibleUsers = (store) => store.visibleUsers;\nexport const numPage = (store) => store.page;\nexport const fromUser = (store) => store.fromUser;\nexport const toUser = (store) => store.toUser;\nexport const boolValCell = (store) => store.isEditCell;\n\nexport const store = createStore(\n  reducer,\n  composeWithDevTools(applyMiddleware(thunk)),\n);\n\n/* Thunk */\nexport const getUsersFromServer = async (id) => {\n  await getUser(id)\n    .then((arrUser) => store.dispatch(setAllUserInState(arrUser)));\n};\n\nexport const setNumPage = (numPages) => {\n  store.dispatch(setNumberPage(numPages));\n};\n\nexport const addUserToState = (user = {}) => {\n  store.dispatch(addUser(user));\n};\n\nexport const deleteUserFromState = (id) => {\n  store.dispatch(deleteUsers(id));\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { useSelector } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport {\n  allUsers, visibleUsers, numPage, setNumPage, fromUser, toUser,\n} from '../../Store/store';\nimport './styleForPagination.css';\n\nexport const Pagination = () => {\n  const allPage = useSelector(allUsers).length;\n  const countVisibleUsers = useSelector(visibleUsers);\n  const numberPage = useSelector(numPage);\n  const fromUsers = useSelector(fromUser);\n  const toUsers = useSelector(toUser);\n\n  const paginationPages = Math.ceil(allPage / countVisibleUsers);\n\n  function getPaginationControls(active, last) {\n    if (last > 5) {\n      if (active === 1) {\n        return [active, active + 1, active + 2, '...', last];\n      }\n\n      if (active > 1 && active < 3) {\n        return [active - 1, active, active + 1, '...', last];\n      }\n\n      if (active > 2 && active < 4) {\n        return [active - 2, active - 1, active, active + 1, '...', last];\n      }\n\n      if (active > 3 && active < last - 2) {\n        return [1, '...', active - 1, active, active + 1, '...', last];\n      }\n\n      if (active > last - 3 && active < last - 1) {\n        return [1, '...', active - 1, active, active + 1, active + 2];\n      }\n\n      if (active > last - 2 && active < last) {\n        return [1, '...', active - 1, active, active + 1];\n      }\n\n      if (active === last) {\n        return [1, '...', active - 2, active - 1, active];\n      }\n    }\n\n    const arr = [];\n\n    for (let i = 1; i <= last; i += 1) {\n      arr.push(i);\n    }\n\n    return arr;\n  }\n\n  const paginationArr = getPaginationControls(numberPage, paginationPages);\n\n  return (\n    <>\n      <div className=\"active-items\">\n        {`Post ${fromUsers}-${toUsers} of ${allPage}`}\n      </div>\n      <nav>\n        <ul className=\"pagination justify-content-center\">\n          <li\n            className={classNames(\n              'page-item',\n              { disabled: numberPage === 1 },\n            )}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={() => setNumPage(numberPage - 1)}\n            >\n              Previous\n            </button>\n          </li>\n\n          {paginationArr.map((pagination) => (\n            pagination !== '...'\n              ? (\n                <li\n                  key={uuidv4()}\n                  className={classNames(\n                    'page-item',\n                    { active: pagination === numberPage },\n                  )}\n                >\n                  <button\n                    type=\"button\"\n                    className=\"page-link\"\n                    onClick={() => setNumPage(pagination)}\n                  >\n                    {pagination}\n                  </button>\n                </li>\n              )\n              : (\n                <li\n                  key={uuidv4()}\n                  className=\"page-item page-link ellipsis\"\n                >\n                  {pagination}\n                </li>\n              )\n          ))}\n\n          <li\n            className={classNames(\n              'page-item',\n              { disabled: numberPage === Math.ceil(allPage / countVisibleUsers) },\n            )}\n          >\n            <button\n              type=\"button\"\n              className=\"page-link\"\n              onClick={() => setNumPage(numberPage + 1)}\n            >\n              Next\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </>\n  );\n};\n","/* eslint-disable jsx-a11y/no-autofocus */\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  deleteUserFromState, isEditCellActionCreator, boolValCell, editUserAction,\n} from '../../Store/store';\nimport './styleUser.css';\nimport { deleteUser, editUser } from '../../API/api';\n\nexport const User = ({\n  name,\n  email,\n  phone,\n  website,\n  id,\n}) => {\n  const dispatch = useDispatch();\n  const isEditCell = useSelector(boolValCell);\n\n  const [editName, setEditName] = useState(false);\n  const [customName, setCustomName] = useState(name);\n\n  const [editEmail, setEditEmail] = useState(false);\n  const [customEmail, setCustomEmail] = useState(email);\n\n  const [editPhone, setEditPhone] = useState(false);\n  const [customPhone, setCustomPhone] = useState(phone);\n\n  const [editWebsite, setEditWebsite] = useState(false);\n  const [customWebsite, setCustomWebsite] = useState(website);\n\n  const verificationEditCell = (setValue) => {\n    setEditName(false);\n    setEditEmail(false);\n    setEditPhone(false);\n    setEditWebsite(false);\n\n    dispatch(isEditCellActionCreator(id));\n    setValue(true);\n  };\n\n  useEffect(() => {\n    if (isEditCell !== id) {\n      setEditName(false);\n      setEditEmail(false);\n      setEditPhone(false);\n      setEditWebsite(false);\n    }\n  }, [isEditCell]);\n\n  const handleEdit = (e, setValue) => {\n    setValue(e.target.value);\n  };\n\n  const handleSave = (e, idUser, setValue, currentValue, baseValue) => {\n    if (e.code === 'Enter') {\n      if (!customName || !editEmail || !editPhone || !editWebsite) {\n        setValue(currentValue);\n      }\n\n      editUser(\n        idUser,\n        customName,\n        customEmail,\n        customPhone,\n        customWebsite,\n      );\n\n      dispatch(editUserAction(\n        idUser,\n        customName,\n        customEmail,\n        customPhone,\n        customWebsite,\n      ));\n\n      dispatch(isEditCellActionCreator(true));\n    }\n\n    if (e.code === 'Escape') {\n      setValue(baseValue);\n      dispatch(isEditCellActionCreator(true));\n    }\n  };\n\n  return (\n    <>\n      <div className=\"bodyItem bodyNameItem\" onDoubleClick={() => { verificationEditCell(setEditName); }}>\n        {editName\n          ? (\n            <input\n              autoFocus\n              value={customName}\n              onChange={(e) => handleEdit(e, setCustomName)}\n              onKeyDown={(e) => handleSave(e, id, setCustomName, customName, name)}\n            />\n          ) : customName}\n      </div>\n      <div className=\"bodyItem bodyEmailItem\" onDoubleClick={() => { verificationEditCell(setEditEmail); }}>\n        {editEmail\n          ? (\n            <input\n              autoFocus\n              value={customEmail}\n              onChange={(e) => handleEdit(e, setCustomEmail)}\n              onKeyDown={(e) => handleSave(e, id, setCustomEmail, customEmail, email)}\n            />\n          ) : customEmail}\n      </div>\n      <div className=\"bodyItem bodyPhoneItem\" onDoubleClick={() => { verificationEditCell(setEditPhone); }}>\n        {editPhone\n          ? (\n\n            <input\n              autoFocus\n              value={customPhone}\n              onChange={(e) => handleEdit(e, setCustomPhone)}\n              onKeyDown={(e) => handleSave(e, id, setCustomPhone, customPhone, phone)}\n            />\n          ) : customPhone}\n      </div>\n      <div className=\"bodyItem bodyWebsiteItem\" onDoubleClick={() => { verificationEditCell(setEditWebsite); }}>\n        {editWebsite\n          ? (\n            <input\n              autoFocus\n              value={customWebsite}\n              onChange={(e) => handleEdit(e, setCustomWebsite)}\n              onKeyDown={(e) => handleSave(e, id, setCustomWebsite, customWebsite, website)}\n            />\n          ) : customWebsite}\n      </div>\n      <div className=\"bodyItem bodyButtonItem\">\n        {' '}\n        <button\n          className=\"deleteButton\"\n          type=\"submit\"\n          onClick={async () => {\n            await deleteUser(id);\n            deleteUserFromState(id);\n          }}\n        >\n          Delete\n        </button>\n      </div>\n    </>\n  );\n};\n\nUser.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  email: PropTypes.string.isRequired,\n  phone: PropTypes.string.isRequired,\n  website: PropTypes.string.isRequired,\n};\n","import React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport {\n  getUsersFromServer, allUsers, fromUser, toUser,\n} from '../../Store/store';\nimport './styleTable.css';\nimport { User } from '../User/User';\n\nexport const Table = () => {\n  const arrUsers = useSelector(allUsers);\n  const fromUsers = useSelector(fromUser);\n  const toUsers = useSelector(toUser);\n\n  useEffect(() => {\n    getUsersFromServer();\n  }, []);\n\n  return (\n    <div className=\"gridTable\">\n      <div className=\"gridTable__header\">\n        <div className=\"headerItem\">Full name</div>\n        <div className=\"headerItem\">Email</div>\n        <div className=\"headerItem\">Phone</div>\n        <div className=\"headerItem\">Website</div>\n        <div className=\"headerItem\">Actions</div>\n      </div>\n      <div className=\"tableBody\">\n        {arrUsers.map((user, i) => i >= fromUsers - 1 && i < toUsers && (\n        <User key={user.id} {...user} />\n        ))}\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { v4 as uuidv4 } from 'uuid';\nimport { addUser } from '../../API/api';\nimport { addUserToState } from '../../Store/store';\nimport './styleForForm.css';\n\nexport const Form = () => (\n  <div className=\"container\">\n    <form className=\"new-employee-form\" name=\"addUser\" method=\"get\">\n      <label className=\"labelForm\" htmlFor=\"name\">\n        Full name:*\n        <input className=\"inputForm\" type=\"text\" name=\"name\" id=\"name\" required placeholder=\"Irina Sokolova\" />\n      </label>\n      <label className=\"labelForm\" htmlFor=\"email\">\n        Email:*\n        <input className=\"inputForm\" type=\"email\" name=\"email\" id=\"email\" required placeholder=\"ivanov@gmail.com\" />\n      </label>\n      <label className=\"labelForm\" htmlFor=\"phone\">\n        Phone:*\n        <input className=\"inputForm\" type=\"tel\" name=\"phone\" id=\"phone\" required placeholder=\"+38(097)532-23-11\" />\n      </label>\n      <label className=\"labelForm\" htmlFor=\"webSite\">\n        Web site:*\n        <input className=\"inputForm\" type=\"url\" name=\"webSite\" id=\"webSite\" required placeholder=\"https://mysite.com\" />\n      </label>\n      <button\n        type=\"submit\"\n        className=\"formButton\"\n        onClick={async (event) => {\n          const { form } = event.target;\n          await addUser(\n            form.name.value,\n            form.email.value,\n            form.phone.value,\n            form.webSite.value,\n          );\n\n          addUserToState({\n            id: uuidv4(),\n            name: form.name.value,\n            email: form.email.value,\n            phone: form.phone.value,\n            webSite: form.webSite.value,\n          });\n\n          form.reset();\n        }}\n      >\n        Add new user\n      </button>\n    </form>\n  </div>\n);\n","import React from 'react';\nimport './App.css';\nimport { Pagination } from './Components/Pagination/Pagination';\nimport { Table } from './Components/Table/Table';\nimport { Form } from './Components/FormForAddNewUser/Form';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div className=\"wrapper\">\n        <Table />\n        <Form />\n      </div>\n      <Pagination />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport { store } from './Store/store';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}